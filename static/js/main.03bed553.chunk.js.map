{"version":3,"sources":["redux/actions/contacts.js","redux/reducers/contacts.js","redux/actions/filter.js","redux/reducers/filter.js","redux/reducers/loader.js","redux/reducers/error.js","redux/reducers/rootReducer.js","redux/store/index.js","redux/selectors/index.js","redux/operations/index.js","Components/ContactForm/ContactForm.styles.js","Components/ContactForm/ContactForm.js","Containers/ContactsFormContainer.js","Components/ContactItem/ContactItem.styles.js","Components/ContactItem/ContactItem.js","Containers/ContactItemContainer.js","Components/ContactList/ContactList.styles.js","Components/ContactList/ContactList.js","Containers/ContactListContainer.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","Containers/FilterContainer.js","Components/Phonebook/Phonebook.styles.js","Components/Phonebook/Phonebook.js","Containers/PhonebookContainer.js","App.js","index.js"],"names":["addContact","createAction","addContactRequest","addContactSuccess","addContactError","deleteContact","deleteContactRequest","deleteContactSuccess","deleteContactError","getContacts","getContactsRequest","getContactsSuccess","getContactsError","resetError","createReducer","state","payload","filter","contact","id","filterContact","rootReducer","combineReducers","contacts","arrContacts","filterName","loader","error","globalState","configureStore","reducer","devTools","process","middleware","thunk","getFilter","contactsFiltered","createSelector","name","toLowerCase","includes","options","headers","Form","styled","form","Label","label","Input","input","Button","transition","button","attrs","mountOnEnter","timeout","Message","div","unmountOnExit","ContactForm","number","onSubmit","onChange","disabledAlert","alert","btnNon","htmlFor","type","value","autoFocus","in","onEntered","formInitialState","toast","configure","ContactFormContainer","notify","field","notifyAlert","is","success","useState","setForm","setAlert","setBtnNon","dispatch","useDispatch","useSelector","e","preventDefault","find","el","length","a","newContact","axios","post","data","asyncAddContact","target","replace","exec","Name","span","Number","ContactItem","onDelete","tel","href","onClick","propTypes","PropTypes","shape","string","isRequired","onDeleteContact","func","ContactItemContainer","delete","asyncDeleteContact","List","ul","Item","li","ContactList","filteredArr","TransitionGroup","component","map","key","ContactListContainer","InputFilter","Filter","showFilter","bool","FilterContainer","Title","h1","Phonebook","visibleLogo","PhonebookContainer","setVisibleLogo","useEffect","get","App","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.03bed553.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"addContact\");\r\nexport const addContactRequest = createAction(\"addContactRequest\");\r\nexport const addContactSuccess = createAction(\"addContactSuccess\");\r\nexport const addContactError = createAction(\"addContactError\");\r\n\r\nexport const deleteContact = createAction(\"deleteContact\");\r\nexport const deleteContactRequest = createAction(\"deleteContactRequest\");\r\nexport const deleteContactSuccess = createAction(\"deleteContactSuccess\");\r\nexport const deleteContactError = createAction(\"deleteContactError\");\r\n\r\nexport const getContacts = createAction(\"getContacts\");\r\nexport const getContactsRequest = createAction(\"getContactsRequest\");\r\nexport const getContactsSuccess = createAction(\"getContactsContacts\");\r\nexport const getContactsError = createAction(\"getContactsError\");\r\n\r\nexport const resetError = createAction(\"resetError\");","\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, getContacts } from \"../actions/contacts\";\r\n\r\nexport default createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n  [getContacts]: (state, { payload }) => [...state, ...payload],\r\n});","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterContact = createAction(\"filterContact\");","\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { filterContact } from \"../actions/filter\";\r\n\r\nexport default createReducer(\"\", {\r\n  [filterContact]: (state, { payload }) => payload,\r\n});","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  addContactError,\r\n  deleteContactError,\r\n  getContactsError,\r\n} from \"../actions/contacts\";\r\n\r\nexport default createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [getContactsError]: () => false,\r\n});","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  addContactError,\r\n  deleteContactError,\r\n  getContactsError,\r\n  resetError,\r\n} from \"../actions/contacts\";\r\n\r\nexport default createReducer(false, {\r\n  [addContactError]: () => true,\r\n  [getContactsError]: () => true,\r\n  [deleteContactError]: () => true,\r\n  [resetError]: () => false,\r\n});","import { combineReducers } from \"redux\";\r\nimport arrContacts from \"./contacts\";\r\nimport filterName from \"./filter\";\r\nimport loader from \"./loader\";\r\nimport error from \"./error\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: arrContacts,\r\n  filter: filterName,\r\n  loader: loader,\r\n  error: error,\r\n});\r\n\r\nexport default rootReducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst globalState = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n  middleware: [thunk],\r\n});\r\nexport default globalState;","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => state.contacts;\r\nexport const getFilter = (state) => state.filter;\r\nexport const getLoader = (state) => state.loader;\r\nexport const getError = (state) => state.error;\r\n\r\nexport const contactsFiltered = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);","import axios from \"axios\";\r\n\r\nimport {\r\n  addContact,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContact,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  getContacts,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  resetError,\r\n} from \"../actions/contacts\";\r\n\r\nconst options = {\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const asyncAddContact = (contact) => async (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  const newContact = { ...contact };\r\n  try {\r\n    dispatch(resetError());\r\n    const { data } = await axios.post(\r\n      \"http://localhost:5000/contacts\",\r\n      newContact,\r\n      options\r\n    );\r\n    dispatch(addContact(data));\r\n  } catch (error) {\r\n    dispatch(addContactError());\r\n  } finally {\r\n    dispatch(addContactSuccess());\r\n  }\r\n};\r\n\r\nexport const asyncDeleteContact = (id) => async (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    dispatch(resetError());\r\n    await axios.delete(`http://localhost:5000/contacts/${id}`);\r\n    dispatch(deleteContact(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError());\r\n  } finally {\r\n    dispatch(deleteContactSuccess());\r\n  }\r\n};\r\n\r\nexport const asyncGetContacts = () => async (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n  try {\r\n    dispatch(resetError());\r\n    const { data } = await axios.get(\"http://localhost:5000/contacts\");\r\n\r\n    dispatch(getContacts(data));\r\n  } catch (error) {\r\n    dispatch(getContactsError());\r\n  } finally {\r\n    dispatch(getContactsSuccess());\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n    flex-direction: column;\r\n    padding: 12px;\r\n    width: 400px;\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 16px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n    display: inline-block;\r\n    margin-bottom: 16px;\r\n    font-size: 20px;\r\n    color: #171718;\r\n`;\r\nexport const Input = styled.input`\r\n    color: #171718;\r\n    font: inherit;\r\n    font-size: 1.2rem;\r\n    padding: 10px;\r\n    border-radius: 4px;\r\n    border: 1px solid #bdbdbd;\r\n    width: 350px;\r\n    outline: 0;\r\n`;\r\n\r\n// export const ButtonNon = styled.button`\r\n// display: none;\r\n// `\r\n\r\nexport const Button = transition.button.attrs({\r\n  mountOnEnter: true,\r\n  // unmountOnExit: true,\r\n  timeout: 250,\r\n})`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #fff;\r\n    background-color: #3f51b5;\r\n    border: 0;\r\n    outline: 0;\r\n    padding: 8px 24px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\r\n    font: inherit;\r\n    text-transform: uppercase;\r\n    user-select: none;\r\n    transition: background-color 200ms ease-in-out;\r\n    :hover {\r\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\r\n    background-color: #303f9f;\r\n  }\r\n  &:enter { \r\n    opacity: 0;\r\n  }\r\n&:enter-active {\r\n  opacity: 1;\r\n  transition: opacity 250ms ease-in;\r\n}\r\n&:exit { \r\n  opacity: 1;\r\n}\r\n&:exit-active {\r\n  opacity: 0;\r\n  transition: opacity 250ms ease-in;\r\n}\r\n  \r\n`;\r\nexport const Message = transition.div.attrs({\r\n  unmountOnExit: true,\r\n  timeout: 3500,\r\n})`\r\n  background: red;\r\n  width:220px;\r\n  height: 80px;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  font-weight: 500;\r\n  border-radius:8px;\r\n  display:flex;\r\n  justify-content:center;\r\n  align-items:center;\r\n  span{\r\n    color:#fff;\r\n  }\r\n  &:enter {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n  }\r\n  &:enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n    transition: opacity 250ms ease-in, transform 250ms ease-in;\r\n  }\r\n  &:exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  &:exit-active {\r\n    opacity: 0;\r\n    transform: translateX(100%);\r\n    transition: opacity 250ms ease-in .3s, transform 250ms ease-in .3s;\r\n  }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Message, Form, Label, Input, Button } from \"./ContactForm.styles\";\r\n\r\nconst ContactForm = ({\r\n  name,\r\n  number,\r\n  onSubmit,\r\n  onChange,\r\n  disabledAlert,\r\n  alert,\r\n  btnNon,\r\n}) => {\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Label htmlFor=\"name\">\r\n        Name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={onChange}\r\n          autoFocus\r\n        />\r\n      </Label>\r\n      <Label htmlFor=\"number\">\r\n        Number\r\n        <Input type=\"text\" name=\"number\" value={number} onChange={onChange} />\r\n      </Label>\r\n      <Button type=\"submit\" in={btnNon}>\r\n        Add Contact\r\n      </Button>\r\n      <Message in={alert} onEntered={disabledAlert}>\r\n        <span>Contact is already exist</span>\r\n      </Message>\r\n    </Form>\r\n  );\r\n};\r\nContactForm.propTypes = {\r\n  number: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onSubmit: PropTypes.func,\r\n  onChange: PropTypes.func,\r\n  disabledAlert: PropTypes.func,\r\n  alert: PropTypes.bool,\r\n  btnNon: PropTypes.bool,\r\n};\r\n\r\nexport default ContactForm;","import React, { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { asyncAddContact } from \"../redux/operations\";\r\nimport { getContacts } from \"../redux/selectors\";\r\n\r\nimport ContactForm from \"../Components/ContactForm/ContactForm\";\r\n\r\nconst formInitialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\ntoast.configure();\r\n\r\nconst ContactFormContainer = () => {\r\n  const notify = (field) => toast.error(`💩 Contact ${field} is too short!`);\r\n  const notifyAlert = (is) => toast.success(`Please enter only ${is}`);\r\n  const [form, setForm] = useState(formInitialState);\r\n  const [alert, setAlert] = useState(false);\r\n  const [btnNon, setBtnNon] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector((state) => getContacts(state));\r\n  const inputHandler = (e) => {\r\n    const name = e.target.name;\r\n    let value = \"\";\r\n    if (name === \"name\") {\r\n      value = e.target.value.replace(/[^A-zА-яЁё\\s]+/gi, \"\");\r\n\r\n      const numbersCheck = /\\d+/g;\r\n      if (numbersCheck.exec(e.target.value)) {\r\n        notifyAlert(\"letters\");\r\n      }\r\n    }\r\n    if (name === \"number\") {\r\n      value = e.target.value.replace(/[^\\d\\s,+,-,(,)]+/gi, \"\");\r\n      const lettersCheck = /[A-zА-яЁё]+/g;\r\n      if (lettersCheck.exec(e.target.value)) {\r\n        notifyAlert(\"numbers\");\r\n      }\r\n    }\r\n    setForm({ ...form, [name]: value });\r\n\r\n    const NonBtn = form;\r\n    if(NonBtn){\r\n      setBtnNon(true);\r\n      return\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = form;\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    const isExistName = contacts.find((el) => el.name === contact.name);\r\n    if (isExistName) {\r\n      setAlert(true);\r\n      return;\r\n    }\r\n\r\n    if (contact.name.length <= 1) {\r\n      notify(\"name\");\r\n      return;\r\n    } else if (contact.number.length <= 1) {\r\n      notify(\"number\");\r\n      return;\r\n    }\r\n\r\n    dispatch(asyncAddContact(contact));\r\n    setForm(formInitialState);\r\n  };\r\n  const disabledAlert = () => {\r\n    setAlert(false);\r\n  };\r\n  const { name, number } = form;\r\n  return (\r\n    <ContactForm\r\n      name={name}\r\n      number={number}\r\n      onSubmit={submitHandler}\r\n      onChange={inputHandler}\r\n      disabledAlert={disabledAlert}\r\n      alert={alert}\r\n      btnNon = {btnNon}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ContactFormContainer;","import styled from \"styled-components\";\r\n\r\nexport const Name = styled.span`\r\n  margin: 0;\r\n  width: 125px;\r\n`;\r\nexport const Number = styled.a`\r\n  margin: 0;\r\n  width: 125px;\r\n  text-transform: uppercase;\r\n  list-style: none;\r\n  text-decoration: none;\r\n  color: black;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  height: 2.5em;\r\n  width: 2.5em;\r\n  border: none;\r\n  background-color: #f2392d;\r\n  border-radius: 4px;\r\n  position: relative;\r\n  padding: 0;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: #c6180c;\r\n    transition: background-color 0.2s ease-in-out;\r\n  }\r\n  :after {\r\n    content: \"\";\r\n    display: block;\r\n    height: 1.5em;\r\n    width: 4px;\r\n    border-radius: 50px;\r\n    background-color: #fff;\r\n    transform: rotate(45deg);\r\n    position: absolute;\r\n    top: 0.5em;\r\n    left: 1.1em;\r\n  }\r\n  :before {\r\n    content: \"\";\r\n    display: block;\r\n    height: 1.5em;\r\n    width: 4px;\r\n    border-radius: 50px;\r\n    background-color: #fff;\r\n    transform: rotate(-45deg);\r\n    position: absolute;\r\n    top: 0.5em;\r\n    left: 1.1em;\r\n  }\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Name, Number } from \"./ContactItem.styles\";\r\n\r\nconst ContactItem = ({ name, number, onDelete }) => {\r\n  const tel = `tel: ${number}`\r\n  return (\r\n    <>\r\n      <Name>{name} :</Name>\r\n      <Number href={tel}> {number}</Number>\r\n      <Button onClick={onDelete}></Button>\r\n    </>\r\n  );\r\n};\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { asyncDeleteContact } from \"../redux/operations\";\r\n\r\nimport ContactItem from \"../Components/ContactItem/ContactItem\";\r\n\r\nconst ContactItemContainer = ({ contact }) => {\r\n  const { id, name, number } = contact;\r\n  const dispatch = useDispatch();\r\n  const onDelete = () => {\r\n    dispatch(asyncDeleteContact(id));\r\n  };\r\n  return <ContactItem onDelete={onDelete} name={name} number={number} />;\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    contact: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactItemContainer;","import styled from \"styled-components\";\r\nimport transition from \"styled-transition-group\";\r\n\r\nexport const List = styled.ul`\r\n  display: block;\r\n  margin: 0;\r\n  padding-top: 1em;\r\n`;\r\nexport const Item = transition.li.attrs({\r\n  unmountOnExit: true,\r\n  timeout: 500,\r\n})`\r\ndisplay: flex;\r\nalign-items: center;\r\nmargin: 0;\r\npadding: 10px;\r\nfont-weight: 500;\r\nmax-width: 300px;\r\nbox-shadow: 0px 2px 3px 0px rgba(50, 50, 50, 0.5);\r\nborder-radius: 2px;\r\n&:enter { \r\n  opacity: 0;\r\n  transform: translateX(-100%); \r\n}\r\n&:enter-active {\r\n  opacity: 1;\r\n  transform: translateX(0);\r\n  transition: opacity 250ms ease-in, transform 250ms ease-in;\r\n}\r\n&:exit { \r\n  opacity: 1;\r\n  transform: translateX(0);\r\n}\r\n&:exit-active {\r\n  opacity: 0;\r\n  transform: translateX(-100%);\r\n  transition: opacity 250ms ease-in, transform 250ms ease-in;\r\n}\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactItemContainer from \"../../Containers/ContactItemContainer\";\r\n\r\nimport { List, Item } from \"./ContactList.styles\";\r\nimport { TransitionGroup } from \"react-transition-group\";\r\n\r\nconst ContactList = ({ filteredArr }) => {\r\n  return (\r\n    <TransitionGroup component={List}>\r\n      {filteredArr.map((contact) => (\r\n        <Item key={contact.id}>\r\n          <ContactItemContainer contact={contact} />\r\n        </Item>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  filteredArr: PropTypes.array,\r\n};\r\n\r\nexport default ContactList;","import React from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { contactsFiltered } from \"../redux/selectors\";\r\n\r\nimport ContactList from \"../Components/ContactList/ContactList\";\r\n\r\nconst ContactListContainer = () => {\r\n  const filteredArr = useSelector((state) => contactsFiltered(state));\r\n\r\n  return <ContactList filteredArr={filteredArr} />;\r\n};\r\n\r\nexport default ContactListContainer;","import transition from \"styled-transition-group\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\n\r\nexport const Form = transition.form.attrs({\r\n  unmountOnExit: true,\r\n  timeout: 250,\r\n})`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 12px;\r\n    width: 400px;\r\n    border-radius: 2px;\r\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n    margin-bottom: 16px;\r\n    &:enter { \r\n      opacity: 0;\r\n    }\r\n  &:enter-active {\r\n    opacity: 1;\r\n    transition: opacity 250ms ease-in;\r\n  }\r\n  &:exit { \r\n    opacity: 1;\r\n  }\r\n  &:exit-active {\r\n    opacity: 0;\r\n    transition: opacity 250ms ease-in;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n      display: inline-block;\r\n      margin-bottom: 16px;\r\n      font-size: 20px;\r\n      color: #171718;\r\n`;\r\n\r\n\r\n// export const InputFilter = transition.input.attrs({\r\n//   unmountOnExit: true,\r\n//   timeout: 250,\r\n// })\r\nexport const InputFilter = styled.input`\r\n    color: #171718;\r\n    font: inherit;\r\n    font-size: 1.2rem;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    border-radius: 4px;\r\n    border: 1px solid rgb(98, 132, 177);\r\n    width: 350px;\r\n    outline: 0;\r\n      \r\n\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { InputFilter, Label, Form } from \"./Filter.styles\";\r\nconst Filter = ({ showFilter, filter, onChange }) => (\r\n  <>\r\n  <Form in={showFilter}>\r\n    <Label>Find contacts by name\r\n    <InputFilter\r\n    onChange={(e) => onChange(e.target.value)}\r\n    value={filter}\r\n    type=\"text\"\r\n  /></Label>\r\n  </Form>\r\n  \r\n  \r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  showFilter: PropTypes.bool,\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterContact } from \"../redux/actions/filter\";\r\nimport { getFilter } from \"../redux/selectors/\";\r\n\r\nimport Filter from \"../Components/Filter/Filter\";\r\n\r\nconst FilterContainer = ({ showFilter }) => {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector((state) => getFilter(state));\r\n  const handleChange = (target) => {\r\n    dispatch(filterContact(target));\r\n  };\r\n  return (\r\n    <Filter showFilter={showFilter} filter={filter} onChange={handleChange} />\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  showFilter: PropTypes.bool,\r\n};\r\n\r\nexport default FilterContainer;","import transition from \"styled-transition-group\";\r\n\r\nexport const Title = transition.h1.attrs({\r\n  unmountOnExit: true,\r\n  timeout: 500,\r\n})`\r\ncolor: #3645ab;\r\n  &:enter { opacity: 0.01; }\r\n  &:enter-active {\r\n    opacity: 1;\r\n    transition: opacity 500ms ease-in;\r\n  }\r\n  &:exit { opacity: 1; }\r\n  &:exit-active {\r\n    opacity: 0.01;\r\n    transition: opacity 500ms ease-in;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ContactFormContainer from \"../../Containers/ContactsFormContainer\";\r\nimport ContactListContainer from \"../../Containers/ContactListContainer\";\r\nimport FilterContainer from \"../../Containers/FilterContainer\";\r\n\r\nimport { Title } from \"./Phonebook.styles\";\r\n\r\nconst Phonebook = ({ showFilter, visibleLogo }) => (\r\n  <>\r\n    <Title in={visibleLogo}>Phonebook</Title>\r\n    <ContactFormContainer />\r\n    <FilterContainer showFilter={showFilter} />\r\n    <ContactListContainer />\r\n  </>\r\n);\r\n\r\nPhonebook.propTypes = {\r\n  showFilter: PropTypes.bool,\r\n  visibleLogo: PropTypes.bool,\r\n};\r\n\r\nexport default Phonebook;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getContacts } from \"../redux/selectors\";\r\nimport { asyncGetContacts } from \"../redux/operations\";\r\n\r\nimport Phonebook from \"../Components/Phonebook/Phonebook\";\r\n\r\nconst PhonebookContainer = () => {\r\n  const contacts = useSelector((state) => getContacts(state));\r\n  const dispatch = useDispatch();\r\n  const [visibleLogo, setVisibleLogo] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setVisibleLogo(true);\r\n    dispatch(asyncGetContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Phonebook visibleLogo={visibleLogo} showFilter={contacts.length >= 2} />\r\n  );\r\n};\r\n\r\nexport default PhonebookContainer;","import React from \"react\";\nimport PhonebookContainer from \"./Containers/PhonebookContainer\";\nfunction App() {\n  return <PhonebookContainer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport globalState from \"./redux/store\";\n\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={globalState}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}